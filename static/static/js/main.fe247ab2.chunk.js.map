{"version":3,"sources":["components/ImageUploader.js","components/ModelSelector.js","components/VectorDBActions.js","components/ResultDisplay.js","components/LlmAnalysis.js","components/OpenAIChat.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","display","flexDirection","alignItems","height","minHeight","transition","dragActive","border","backgroundColor","dragInactive","uploadBox","justifyContent","width","cursor","uploadIcon","fontSize","color","marginBottom","supportText","marginTop","previewBox","position","imageContainer","breakpoints","down","overflow","deleteButton","top","right","ImageUploader","_ref","onImageUpload","classes","previewUrl","setPreviewUrl","useState","setDragActive","fileInputRef","useRef","handleDrag","e","preventDefault","stopPropagation","type","handleFiles","file","startsWith","URL","createObjectURL","alert","React","createElement","Paper","className","concat","onDragEnter","onDragLeave","onDragOver","onDrop","dataTransfer","files","ref","accept","onChange","target","style","Box","Typography","variant","gutterBottom","src","alt","maxHeight","objectFit","IconButton","aria-label","onClick","handleRemoveImage","current","value","DeleteIcon","onButtonClick","click","CloudUploadIcon","Button","component","startIcon","card","selectedCard","unavailableCard","opacity","cardContent","flexGrow","chipContainer","successChip","errorChip","modelType","processButton","textAlign","ModelSelector","onModelSelect","onProcess","isProcessing","modelsStatus","selectedModel","imageSelected","models","id","name","description","icon","VisibilityIcon","available","yolo","detr","CategoryIcon","vit","handleModelClick","modelId","find","m","sx","p","Grid","container","map","model","item","xs","sm","key","Card","CardContent","mb","Chip","label","size","CardActions","disabled","fullWidth","PlayArrowIcon","root","borderRadius","shape","button","marginRight","searchDialog","minWidth","formControl","searchResults","resultCard","resultImage","chip","margin","similarityChip","palette","primary","main","VectorDBActions","results","isSaving","setIsSaving","saveSuccess","setSaveSuccess","saveError","setSaveError","openSearchDialog","setOpenSearchDialog","searchType","setSearchType","searchClass","setSearchClass","setSearchResults","isSearching","setIsSearching","searchError","setSearchError","data","handleCloseSearchDialog","generateUUID","replace","c","r","Math","random","toString","async","response","fetch","method","headers","body","JSON","stringify","image","metadata","classifications","objects","detections","imageId","ok","Error","status","result","json","error","setTimeout","err","console","message","Fragment","CircularProgress","handleOpenSearchDialog","Alert","severity","Snackbar","open","autoHideDuration","onClose","Dialog","maxWidth","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","event","MenuItem","TextField","placeholder","marginLeft","log","length","index","similarity","distance","image_data","CardMedia","class","toFixed","confidence","DialogActions","requestBody","n_results","trim","class_name","success","Array","isArray","dividerMargin","gap","flexWrap","ResultDisplay","bgcolor","renderPerformanceInfo","performance","Divider","ms","undefined","isNaN","num","Number","formatTime","inference_time","device","md","List","detection","ListItem","ListItemText","secondary","bbox","join","top_predictions","prediction","rank","probability","responseBox","whiteSpace","buttonProgress","LlmAnalysis","visionResults","userQuery","setUserQuery","isAnalyzing","setIsAnalyzing","analysisResult","setAnalysisResult","setError","mt","OpenAIChat","imageBase64","apiKey","setApiKey","prompt","setPrompt","setResponse","loading","setLoading","objectId","setObjectId","setClassName","nResults","setNResults","inputProps","min","max","multiline","rows","q","api_key","res","credentials","txt","text","parse","_unused","meta","latency_sec","retrievedText","retrieved","forEach","answer","onClear","fontFamily","createMuiTheme","typography","App","selectedImage","setSelectedImage","setImageBase64","setSelectedModel","setIsProcessing","setResults","setModelsStatus","useEffect","then","catch","ThemeProvider","AppBar","Toolbar","Container","paragraph","File","reader","FileReader","onload","dataUrl","onerror","readAsDataURL","formData","FormData","append","endpoint","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAYA,MAAMA,EAAYC,YAAYC,IAAK,CACjCC,MAAO,CACLC,QAASF,EAAMG,QAAQ,GACvBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,OAAQ,OACRC,UAAW,IACXC,WAAY,iBAEdC,WAAY,CACVC,OAAQ,qBACRC,gBAAiB,2BAEnBC,aAAc,CACZF,OAAQ,kBACRC,gBAAiB,SAEnBE,UAAW,CACTV,QAAS,OACTC,cAAe,SACfC,WAAY,SACZS,eAAgB,SAChBR,OAAQ,OACRS,MAAO,OACPC,OAAQ,WAEVC,WAAY,CACVC,SAAU,GACVC,MAAO,UACPC,aAAcrB,EAAMG,QAAQ,IAE9BmB,YAAa,CACXC,UAAWvB,EAAMG,QAAQ,IAE3BqB,WAAY,CACVpB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZU,MAAO,OACPT,OAAQ,OACRkB,SAAU,YAEZC,eAAgB,CACdD,SAAU,WACVT,MAAO,OAEPT,OAAQ,OACR,CAACP,EAAM2B,YAAYC,KAAK,OAAQ,CAC9BrB,OAAQ,QAEVH,QAAS,OACTW,eAAgB,SAChBT,WAAY,SACZuB,SAAU,SACVN,UAAWvB,EAAMG,QAAQ,IAE3B2B,aAAc,CACZL,SAAU,WACVM,IAAK,EACLC,MAAO,EACPpB,gBAAiB,2BACjB,UAAW,CACTA,gBAAiB,gCAgIRqB,MA3HOC,IAAwB,IAAvB,cAAEC,GAAeD,EACtC,MAAME,EAAUtC,KACTuC,EAAYC,GAAiBC,mBAAS,OACtC7B,EAAY8B,GAAiBD,oBAAS,GACvCE,EAAeC,iBAAO,MAEtBC,EAAcC,IAClBA,EAAEC,iBACFD,EAAEE,kBACa,cAAXF,EAAEG,MAAmC,aAAXH,EAAEG,KAC9BP,GAAc,GACM,cAAXI,EAAEG,MACXP,GAAc,IAoBZQ,EAAeC,IACfA,EAAKF,KAAKG,WAAW,WACvBZ,EAAca,IAAIC,gBAAgBH,IAClCd,EAAcc,IAEdI,MAAM,gCAcV,OACEC,IAAAC,cAACC,IAAK,CACJC,UAAS,GAAAC,OAAKtB,EAAQnC,MAAK,KAAAyD,OAAIhD,EAAa0B,EAAQ1B,WAAa0B,EAAQvB,cACzE8C,YAAahB,EACbiB,YAAajB,EACbkB,WAAYlB,EACZmB,OAzCgBlB,IAClBA,EAAEC,iBACFD,EAAEE,kBACFN,GAAc,GACVI,EAAEmB,aAAaC,OAASpB,EAAEmB,aAAaC,MAAM,IAC/ChB,EAAYJ,EAAEmB,aAAaC,MAAM,MAsCjCV,IAAAC,cAAA,SACEU,IAAKxB,EACLM,KAAK,OACLmB,OAAO,UACPC,SAtCgBvB,IACpBA,EAAEC,iBACED,EAAEwB,OAAOJ,OAASpB,EAAEwB,OAAOJ,MAAM,IACnChB,EAAYJ,EAAEwB,OAAOJ,MAAM,KAoCzBK,MAAO,CAAEjE,QAAS,UAGlBiC,EAyBAiB,IAAAC,cAACe,IAAG,CAACb,UAAWrB,EAAQZ,YACtB8B,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,WAGtCnB,IAAAC,cAACe,IAAG,CAACb,UAAWrB,EAAQV,gBACtB4B,IAAAC,cAAA,OACEmB,IAAKrC,EACLsC,IAAI,UACJlB,UAAU,gBACVY,MAAO,CACLrD,MAAO,OACPT,OAAQ,OACRqE,UAAW,OACXC,UAAW,UACXzE,QAAS,WAGbkD,IAAAC,cAACuB,IAAU,CACTC,aAAW,SACXtB,UAAWrB,EAAQN,aACnBkD,QAnEcC,KACxB3C,EAAc,MACdH,EAAc,MACdM,EAAayC,QAAQC,MAAQ,KAkEnB7B,IAAAC,cAAC6B,IAAU,SA9CjB9B,IAAAC,cAACe,IAAG,CACFb,UAAWrB,EAAQtB,UACnBkE,QA7BcK,KACpB5C,EAAayC,QAAQI,UA8BfhC,IAAAC,cAACgC,IAAe,CAAC9B,UAAWrB,EAAQlB,aACpCoC,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,6BAGtCnB,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,gBAAgBqD,cAAY,GAAC,MAG/DnB,IAAAC,cAACiC,IAAM,CACLhB,QAAQ,YACRpD,MAAM,UACNqE,UAAU,OACVC,UAAWpC,IAAAC,cAACgC,IAAe,OAC5B,gBAGDjC,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,gBAAgBqC,UAAWrB,EAAQd,aAAa,uC,uFCvJ5F,MAAMxB,EAAYC,YAAYC,IAAK,CACjC2F,KAAM,CACJpF,OAAQ,OACRH,QAAS,OACTC,cAAe,UAEjBuF,aAAc,CACZjF,OAAQ,qBAEVkF,gBAAiB,CACfC,QAAS,IAEXC,YAAa,CACXC,SAAU,GAEZC,cAAe,CACb5E,aAAcrB,EAAMG,QAAQ,MAE9B+F,YAAa,CACXtF,gBAAiB,UACjBQ,MAAO,QAET+E,UAAW,CACTvF,gBAAiB,UACjBQ,MAAO,QAETgF,UAAW,CACT7E,UAAWvB,EAAMG,QAAQ,IAE3BkG,cAAe,CACb9E,UAAWvB,EAAMG,QAAQ,GACzBmG,UAAW,aAwHAC,MApHOrE,IAOf,IAPgB,cACrBsE,EAAa,UACbC,EAAS,aACTC,EAAY,aACZC,EAAY,cACZC,EAAa,cACbC,GACD3E,EACC,MAAME,EAAUtC,IAEVgH,EAAS,CACb,CACEC,GAAI,OACJC,KAAM,SACNC,YAAa,qCACbC,KAAM5D,IAAAC,cAAC4D,IAAc,MACrBC,UAAWT,EAAaU,MAE1B,CACEN,GAAI,OACJC,KAAM,OACNC,YAAa,6CACbC,KAAM5D,IAAAC,cAAC4D,IAAc,MACrBC,UAAWT,EAAaW,MAE1B,CACEP,GAAI,MACJC,KAAM,MACNC,YAAa,8CACbC,KAAM5D,IAAAC,cAACgE,IAAY,MACnBH,UAAWT,EAAaa,MAItBC,EAAoBC,IACpBZ,EAAOa,KAAKC,GAAKA,EAAEb,KAAOW,GAASN,WACrCZ,EAAckB,IAIlB,OACEpE,IAAAC,cAACe,IAAG,CAACuD,GAAI,CAAEC,EAAG,EAAGvH,OAAQ,SACvB+C,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,gBAItCnB,IAAAC,cAACwE,IAAI,CAACC,WAAS,EAAC7H,QAAS,GACtB2G,EAAOmB,IAAKC,GACX5E,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAKJ,EAAMnB,IACnCzD,IAAAC,cAACgF,IAAI,CACH9E,UAAS,qBAAAC,OACLtB,EAAQuD,KAAI,uBAAAjC,OACZkD,IAAkBsB,EAAMnB,GAAK3E,EAAQwD,aAAe,GAAE,uBAAAlC,OACrDwE,EAAMd,UAAsC,GAA1BhF,EAAQyD,gBAAoB,oBAEnDb,QAASA,IAAMyC,EAAiBS,EAAMnB,KAEtCzD,IAAAC,cAACiF,IAAW,CAAC/E,UAAWrB,EAAQ2D,aAC9BzC,IAAAC,cAACe,IAAG,CAACuD,GAAI,CAAEY,GAAI,EAAGrH,MAAO,YACtB8G,EAAMhB,MAET5D,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKiB,UAAU,MAAMhB,cAAY,GAClDyD,EAAMlB,MAET1D,IAAAC,cAAA,OAAKE,UAAWrB,EAAQ6D,eACrBiC,EAAMd,UACL9D,IAAAC,cAACmF,IAAI,CACHC,MAAM,YACNlF,UAAWrB,EAAQ8D,YACnB0C,KAAK,UAGPtF,IAAAC,cAACmF,IAAI,CACHC,MAAM,gBACNlF,UAAWrB,EAAQ+D,UACnByC,KAAK,WAIXtF,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,iBAC/B8G,EAAMjB,cAGX3D,IAAAC,cAACsF,IAAW,KACVvF,IAAAC,cAACiC,IAAM,CACLoD,KAAK,QACL5D,QAASA,IAAMyC,EAAiBS,EAAMnB,IACtC+B,UAAWZ,EAAMd,UACjBhG,MAAOwF,IAAkBsB,EAAMnB,GAAK,UAAY,UAChDvC,QAASoC,IAAkBsB,EAAMnB,GAAK,YAAc,WACpDgC,WAAS,GAERnC,IAAkBsB,EAAMnB,GAAK,WAAa,eAQvDzD,IAAAC,cAAA,OAAKE,UAAWrB,EAAQiE,eACtB/C,IAAAC,cAACiC,IAAM,CACLhB,QAAQ,YACRpD,MAAM,UACNwH,KAAK,QACLlD,UAAWpC,IAAAC,cAACyF,IAAa,MACzBhE,QAASyB,EACTqC,UAAWlC,IAAkBC,GAAiBH,GAE7CA,EAAe,gBAAkB,oB,gJCvI5C,MAAM5G,GAAYC,YAAYC,IAAK,CACjCiJ,KAAM,CACJ1H,UAAWvB,EAAMG,QAAQ,GACzBkB,aAAcrB,EAAMG,QAAQ,GAC5BD,QAASF,EAAMG,QAAQ,GACvBS,gBAAiB,UACjBsI,aAAclJ,EAAMmJ,MAAMD,cAE5BE,OAAQ,CACNC,YAAarJ,EAAMG,QAAQ,IAE7BmJ,aAAc,CACZC,SAAU,SAEZC,YAAa,CACXnI,aAAcrB,EAAMG,QAAQ,GAC5BoJ,SAAU,QAEZE,cAAe,CACblI,UAAWvB,EAAMG,QAAQ,IAE3BuJ,WAAY,CACVrI,aAAcrB,EAAMG,QAAQ,IAE9BwJ,YAAa,CACXpJ,OAAQ,IACRsE,UAAW,WAEb+E,KAAM,CACJC,OAAQ7J,EAAMG,QAAQ,KAExB2J,eAAgB,CACdlJ,gBAAiBZ,EAAM+J,QAAQC,QAAQC,KACvC7I,MAAO,YAuXI8I,OAnXShI,IAAkB,IAAjB,QAAEiI,GAASjI,EAClC,MAAME,EAAUtC,MACTsK,EAAUC,GAAe9H,oBAAS,IAClC+H,EAAaC,GAAkBhI,oBAAS,IACxCiI,EAAWC,GAAgBlI,mBAAS,OACpCmI,EAAkBC,GAAuBpI,oBAAS,IAClDqI,EAAYC,GAAiBtI,mBAAS,UACtCuI,EAAaC,GAAkBxI,mBAAS,KACxCkH,EAAeuB,GAAoBzI,mBAAS,KAC5C0I,EAAaC,GAAkB3I,oBAAS,IACxC4I,EAAaC,GAAkB7I,mBAAS,OAGzC,MAAE2F,EAAK,KAAEmD,GAASlB,EAoElBmB,EAA0BA,KAC9BX,GAAoB,IAkFhBY,EAAeA,IACZ,uCAAuCC,QAAQ,SAAS,SAASC,GACtE,MAAMC,EAAoB,GAAhBC,KAAKC,SAAgB,EAE/B,OADgB,MAANH,EAAYC,EAAS,EAAJA,EAAU,GAC5BG,SAAS,OA6EtB,OACEvI,IAAAC,cAACe,IAAG,CAACb,UAAWrB,EAAQ6G,MACtB3F,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,2BAItCnB,IAAAC,cAACe,IAAG,CAAClE,QAAQ,OAAOE,WAAW,SAASmI,GAAI,GAC1CnF,IAAAC,cAACiC,IAAM,CACLhB,QAAQ,YACRpD,MAAM,UACN4D,QA/OqB8G,UAC3BzB,GAAY,GACZI,EAAa,MAEb,IACE,IAAIsB,EAgCJ,GA5BEA,EAFY,QAAV7D,QAEe8D,MAAM,yBAA0B,CAC/CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOjB,EAAKiB,MACZC,SAAU,CACRrE,MAAO,MACPsE,gBAAiBnB,EAAKmB,2BAMXR,MAAM,4BAA6B,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOjB,EAAKiB,MACZG,QAASpB,EAAKqB,WACdC,QAASpB,SAKVQ,EAASa,GACZ,MAAM,IAAIC,MAAM,uBAADnJ,OAAwBqI,EAASe,SAGlD,MAAMC,QAAehB,EAASiB,OAE9B,GAAID,EAAOE,MACT,MAAM,IAAIJ,MAAME,EAAOE,OAGzB1C,GAAe,GACf2C,WAAW,IAAM3C,GAAe,GAAQ,KACxC,MAAO4C,GACPC,QAAQH,MAAM,6BAA8BE,GAC5C1C,EAAa,8BAAD/G,OAA+ByJ,EAAIE,UAChD,QACChD,GAAY,KA2LRvB,SAAUsB,EACV3G,UAAWrB,EAAQgH,QAElBgB,EACC9G,IAAAC,cAAAD,IAAAgK,SAAA,KACEhK,IAAAC,cAACgK,IAAgB,CAAC3E,KAAM,GAAIxH,MAAM,UAAUiD,MAAO,CAAEgF,YAAa,KAAO,aAI3E,qBAIJ/F,IAAAC,cAACiC,IAAM,CACLhB,QAAQ,WACRpD,MAAM,UACN4D,QAtMuBwI,KAC7B7C,GAAoB,GACpBK,EAAiB,IACjBI,EAAe,OAoMT3H,UAAWrB,EAAQgH,QACpB,mBAKFoB,GACClH,IAAAC,cAACkK,IAAK,CAACC,SAAS,QAAQrJ,MAAO,CAAE9C,UAAW,IACzCiJ,GAILlH,IAAAC,cAACoK,IAAQ,CAACC,KAAMtD,EAAauD,iBAAkB,IAAMC,QAASA,IAAMvD,GAAe,IACjFjH,IAAAC,cAACkK,IAAK,CAACC,SAAS,WACH,QAAVxF,EACC,6DAEA,sDAMN5E,IAAAC,cAACwK,IAAM,CACLH,KAAMlD,EACNoD,QAASxC,EACT0C,SAAS,KACTjF,WAAS,GAETzF,IAAAC,cAAC0K,IAAW,KAAC,0BACb3K,IAAAC,cAAC2K,IAAa,KACZ5K,IAAAC,cAAC4K,IAAW,CAAC1K,UAAWrB,EAAQoH,aAC9BlG,IAAAC,cAAC6K,IAAU,CAACrH,GAAG,qBAAoB,eACnCzD,IAAAC,cAAC8K,IAAM,CACLC,QAAQ,oBACRvH,GAAG,cACH5B,MAAOyF,EACPzG,SAhOoBoK,IAC9B1D,EAAc0D,EAAMnK,OAAOe,OAC3B6F,EAAiB,IACjBI,EAAe,QA+NL9H,IAAAC,cAACiL,IAAQ,CAACrJ,MAAM,SAAQ,2BACxB7B,IAAAC,cAACiL,IAAQ,CAACrJ,MAAM,SAAQ,0BAIZ,UAAfyF,GACCtH,IAAAC,cAAC4K,IAAW,CAAC1K,UAAWrB,EAAQoH,aAC9BlG,IAAAC,cAACkL,IAAS,CACR9F,MAAM,aACNxD,MAAO2F,EACP3G,SArOmBoK,IAC/BxD,EAAewD,EAAMnK,OAAOe,QAqOhBuJ,YAAY,2BACZ3F,WAAS,KAKdoC,GACC7H,IAAAC,cAACkK,IAAK,CAACC,SAAS,QAAQrJ,MAAO,CAAEhD,aAAc,KAC5C8J,GAIL7H,IAAAC,cAACe,IAAG,CAACb,UAAWrB,EAAQqH,eACrBwB,EACC3H,IAAAC,cAACe,IAAG,CAAClE,QAAQ,OAAOW,eAAe,SAAST,WAAW,SAASwH,EAAG,GACjExE,IAAAC,cAACgK,IAAgB,MACjBjK,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQH,MAAO,CAAEsK,WAAY,KAAM,iBAKzDrL,IAAAC,cAAAD,IAAAgK,SAAA,KACGF,QAAQwB,IAAI,wCAAyCnF,GACrDA,EAAcoF,OAAS,GA5KpCzB,QAAQwB,IAAI,4BAA6BnF,GACzC2D,QAAQwB,IAAI,yBAA0BnF,EAAcoF,QAEvB,IAAzBpF,EAAcoF,QAChBzB,QAAQwB,IAAI,wBAEVtL,IAAAC,cAACgB,IAAU,CAACC,QAAQ,SAAQ,sBAK9BlB,IAAAC,cAACwE,IAAI,CAACC,WAAS,EAAC7H,QAAS,GACtBsJ,EAAcxB,IAAI,CAAC8E,EAAQ+B,KAC1B,MAAMC,EAAqC,KAAvB,EAAIhC,EAAOiC,UAE/B,OACE1L,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAKwG,GAC7BxL,IAAAC,cAACgF,IAAI,CAAC9E,UAAWrB,EAAQsH,YACtBqD,EAAOR,UAAYQ,EAAOR,SAAS0C,WAClC3L,IAAAC,cAAC2L,IAAS,CACRzL,UAAWrB,EAAQuH,YACnBlE,UAAU,MACVlF,OAAO,MACP+L,MAAK,0BAAA5I,OAA4BqJ,EAAOR,SAAS0C,YACjDtK,IAAKoI,EAAOR,UAAYQ,EAAOR,SAAS4C,MAAQpC,EAAOR,SAAS4C,MAAQ,WAG1E7L,IAAAC,cAACe,IAAG,CACFb,UAAWrB,EAAQuH,YACnBtF,MAAO,CACLzD,gBAAiB,UACjBR,QAAS,OACTE,WAAY,SACZS,eAAgB,SAChBR,OAAQ,MAGV+C,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,iBAC/B2L,EAAOR,UAAYQ,EAAOR,SAAS4C,MAAQpC,EAAOR,SAAS4C,MAAQ,SAAS,WAInF7L,IAAAC,cAACiF,IAAW,KACVlF,IAAAC,cAACe,IAAG,CAAClE,QAAQ,OAAOW,eAAe,gBAAgBT,WAAW,SAASmI,GAAI,GACzEnF,IAAAC,cAACgB,IAAU,CAACC,QAAQ,aAAY,WAASsK,EAAQ,GACjDxL,IAAAC,cAACmF,IAAI,CACHC,MAAK,eAAAjF,OAAiBqL,EAAWK,QAAQ,GAAE,KAC3C3L,UAAWrB,EAAQ0H,eACnBlB,KAAK,WAGTtF,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,iBAChCkC,IAAAC,cAAA,cAAQ,UAAe,IAAEwJ,EAAOR,SAAS4C,OAAS,OAEnDpC,EAAOR,SAAS8C,YACf/L,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,iBAChCkC,IAAAC,cAAA,cAAQ,eAAoB,KAAgC,IAA7BwJ,EAAOR,SAAS8C,YAAkBD,QAAQ,GAAG,KAGhF9L,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,iBAChCkC,IAAAC,cAAA,cAAQ,cAAmB,IAAEwJ,EAAOhG,WAiHtCzD,IAAAC,cAACgB,IAAU,CAACC,QAAQ,SAAQ,mDAMtClB,IAAAC,cAAC+L,IAAa,KACZhM,IAAAC,cAACiC,IAAM,CAACR,QAASsG,EAAyBlK,MAAM,WAAU,SAG1DkC,IAAAC,cAACiC,IAAM,CACLR,QApQW8G,UACnBZ,GAAe,GACfE,EAAe,MAEf,IACE,IAAImE,EAAc,GAElB,GAAmB,UAAf3E,EAEF2E,EAAc,CACZ3E,WAAY,QACZ0B,MAAOjB,EAAKiB,MACZkD,UAAW,OAER,CAEL,IAAK1E,EAAY2E,OACf,MAAM,IAAI5C,MAAM,6BAGlB0C,EAAc,CACZ3E,WAAY,QACZ8E,WAAY5E,EAAY2E,OACxBD,UAAW,GAIf,MAAMzD,QAAiBC,MAAM,8BAA+B,CAC1DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUkD,KAGvB,IAAKxD,EAASa,GACZ,MAAM,IAAIC,MAAM,uBAADnJ,OAAwBqI,EAASe,SAGlD,MAAMC,QAAehB,EAASiB,OAE9B,GAAID,EAAOE,MACT,MAAM,IAAIJ,MAAME,EAAOE,OAMzB,GAHAG,QAAQwB,IAAI,uBAAwB7B,IAGhCA,EAAO4C,UAAWC,MAAMC,QAAQ9C,EAAO5C,SAOzC,MADAiD,QAAQH,MAAM,kCAAmCF,GAC3C,IAAIF,MAAM,kCANhBO,QAAQwB,IAAI,gCAAiC7B,EAAO5C,SACpDiD,QAAQwB,IAAI,wBAAyB7B,EAAO5C,QAAQ0E,QACpDzB,QAAQwB,IAAI,qBAAsB7B,EAAO5C,QAAQ,IACjDa,EAAiB+B,EAAO5C,SAK1B,MAAOgD,GACPC,QAAQH,MAAM,6BAA8BE,GAC5C/B,EAAe,8BAAD1H,OAA+ByJ,EAAIE,UAClD,QACCnC,GAAe,KAwMT9J,MAAM,UACNoD,QAAQ,YACRsE,SAAUmC,GAA+B,UAAfL,IAA2BE,EAAY2E,QAClE,cCzZX,MAAM3P,GAAYC,YAAYC,IAAK,CACjCC,MAAO,CACLC,QAASF,EAAMG,QAAQ,IAEzBkB,aAAc,CACZA,aAAcrB,EAAMG,QAAQ,IAE9BwJ,YAAa,CACXqE,SAAU,OACVpJ,UAAW,QACXC,UAAW,WAEbiL,cAAe,CACbjG,OAAO,GAADnG,OAAK1D,EAAMG,QAAQ,GAAE,SAE7B8F,cAAe,CACb7F,QAAS,OACT2P,IAAK/P,EAAMG,QAAQ,GACnB6P,SAAU,WAoKCC,OAhKO/N,IAAkB,IAAjB,QAAEiI,GAASjI,EAChC,MAAME,EAAUtC,KAChB,IAAKqK,EAAS,OAAO,KAErB,MAAM,MAAEjC,EAAK,KAAEmD,GAASlB,EAWxB,GAAIkB,EAAK4B,MACP,OACE3J,IAAAC,cAACC,IAAK,CAACqE,GAAI,CAAEC,EAAG,EAAGoI,QAAS,YAC1B5M,IAAAC,cAACgB,IAAU,CAACnD,MAAM,SAASiK,EAAK4B,QAMtC,MAAMkD,EAAwBA,IACvB9E,EAAK+E,YAGR9M,IAAAC,cAACe,IAAG,CAACb,UAAU,oBACbH,IAAAC,cAAC8M,IAAO,CAAC5M,UAAWrB,EAAQ0N,gBAC5BxM,IAAAC,cAACgB,IAAU,CAACC,QAAQ,SAAQ,mBAvBd8L,KAClB,QAAWC,IAAPD,GAA2B,OAAPA,GAAeE,MAAMF,GAAK,MAAO,IACzD,MAAMG,EAAMC,OAAOJ,GACnB,OAAIG,EAAM,IAAY,GAAN/M,OAAU+M,EAAIrB,QAAQ,GAAE,OAClC,GAAN1L,QAAW+M,EAAM,KAAMrB,QAAQ,GAAE,OAoBVuB,CAAWtF,EAAK+E,YAAYQ,gBAAgB,OAAKvF,EAAK+E,YAAYS,SAN3D,KAahC,MAAc,SAAV3I,GAA8B,SAAVA,EAEpB5E,IAAAC,cAACC,IAAK,CAACC,UAAWrB,EAAQnC,OACxBqD,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GACxB,SAAVyD,EAAmB,SAAW,OAAO,sBAGxC5E,IAAAC,cAACwE,IAAI,CAACC,WAAS,EAAC7H,QAAS,GACvBmD,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACpBzF,EAAKiB,OACJhJ,IAAAC,cAACe,IAAG,CAACb,UAAWrB,EAAQf,cACtBiC,IAAAC,cAACgB,IAAU,CAACC,QAAQ,YAAYC,cAAY,GAAC,oBAG7CnB,IAAAC,cAAA,OACEmB,IAAG,yBAAAhB,OAA2B2H,EAAKiB,OACnC3H,IAAI,mBACJlB,UAAWrB,EAAQuH,gBAM3BrG,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACrBxN,IAAAC,cAACe,IAAG,CAACb,UAAWrB,EAAQf,cACtBiC,IAAAC,cAACgB,IAAU,CAACC,QAAQ,YAAYC,cAAY,GAAC,qBAI5C4G,EAAKqB,YAAcrB,EAAKqB,WAAWmC,OAAS,EAC3CvL,IAAAC,cAACwN,IAAI,KACF1F,EAAKqB,WAAWzE,IAAI,CAAC+I,EAAWlC,IAC/BxL,IAAAC,cAACD,IAAMgK,SAAQ,CAAChF,IAAKwG,GACnBxL,IAAAC,cAAC0N,IAAQ,KACP3N,IAAAC,cAAC2N,IAAY,CACXlH,QACE1G,IAAAC,cAACe,IAAG,CAACD,MAAO,CAAEjE,QAAS,OAAQE,WAAY,WACzCgD,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQiB,UAAU,QACnCuL,EAAU7B,OAEb7L,IAAAC,cAACmF,IAAI,CACHC,MAAK,GAAAjF,QAA6B,IAAvBsN,EAAU3B,YAAkBD,QAAQ,GAAE,KACjDxG,KAAK,QACLxH,MAAM,UACNiD,MAAO,CAAEsK,WAAY,MAI3BwC,UAAS,kBAAAzN,OAAoBsN,EAAUI,KAAKC,KAAK,MAAK,QAGzDvC,EAAQzD,EAAKqB,WAAWmC,OAAS,GAAKvL,IAAAC,cAAC8M,IAAO,SAKrD/M,IAAAC,cAACgB,IAAU,CAACC,QAAQ,SAAQ,0BAMnC2L,IAGD7M,IAAAC,cAAC2G,GAAe,CAACC,QAASA,KAMlB,QAAVjC,EAEA5E,IAAAC,cAACC,IAAK,CAACC,UAAWrB,EAAQnC,OACxBqD,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,8BAItCnB,IAAAC,cAACgB,IAAU,CAACC,QAAQ,YAAYC,cAAY,GAAC,oBAI5C4G,EAAKiG,iBAAmBjG,EAAKiG,gBAAgBzC,OAAS,EACrDvL,IAAAC,cAACwN,IAAI,KACF1F,EAAKiG,gBAAgBrJ,IAAI,CAACsJ,EAAYzC,IACrCxL,IAAAC,cAACD,IAAMgK,SAAQ,CAAChF,IAAKwG,GACnBxL,IAAAC,cAAC0N,IAAQ,KACP3N,IAAAC,cAAC2N,IAAY,CACXlH,QACE1G,IAAAC,cAACe,IAAG,CAACD,MAAO,CAAEjE,QAAS,OAAQE,WAAY,WACzCgD,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQiB,UAAU,QACnC8L,EAAWC,KAAK,KAAGD,EAAWpC,OAEjC7L,IAAAC,cAACmF,IAAI,CACHC,MAAK,GAAAjF,QAA+B,IAAzB6N,EAAWE,aAAmBrC,QAAQ,GAAE,KACnDxG,KAAK,QACLxH,MAAiB,IAAV0N,EAAc,UAAY,UACjCzK,MAAO,CAAEsK,WAAY,SAM9BG,EAAQzD,EAAKiG,gBAAgBzC,OAAS,GAAKvL,IAAAC,cAAC8M,IAAO,SAK1D/M,IAAAC,cAACgB,IAAU,CAACC,QAAQ,SAAQ,gCAG7B2L,IAGD7M,IAAAC,cAAC2G,GAAe,CAACC,QAASA,KAKzB,MCtLT,MAAMrK,GAAYC,YAAYC,IAAK,CACjCC,MAAO,CACLC,QAASF,EAAMG,QAAQ,GACvBoB,UAAWvB,EAAMG,QAAQ,IAE3BkB,aAAc,CACZA,aAAcrB,EAAMG,QAAQ,IAE9B2P,cAAe,CACbjG,OAAO,GAADnG,OAAK1D,EAAMG,QAAQ,GAAE,SAE7BuR,YAAa,CACXxR,QAASF,EAAMG,QAAQ,GACvBS,gBAAiB,UACjBsI,aAAclJ,EAAMmJ,MAAMD,aAC1B3H,UAAWvB,EAAMG,QAAQ,GACzBwR,WAAY,YAEdC,eAAgB,CACdjD,WAAY3O,EAAMG,QAAQ,OA4Hf0R,OAxHK3P,IAA+B,IAA9B,cAAE4P,EAAa,MAAE5J,GAAOhG,EAC3C,MAAME,EAAUtC,MACTiS,EAAWC,GAAgBzP,mBAAS,KACpC0P,EAAaC,GAAkB3P,oBAAS,IACxC4P,EAAgBC,GAAqB7P,mBAAS,OAC9C0K,EAAOoF,GAAY9P,mBAAS,MA+CnC,OAAKuP,EAGHxO,IAAAC,cAACC,IAAK,CAACC,UAAWrB,EAAQnC,OACxBqD,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,oBACR,QAAVyD,EAAkB,iBAAmB,YAAY,YAGrE5E,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQf,UAAWrB,EAAQf,cAAc,+FAI7DiC,IAAAC,cAACkL,IAAS,CACR1F,WAAS,EACTJ,MAAM,gCACNnE,QAAQ,WACRW,MAAO4M,EACP5N,SAAWvB,GAAMoP,EAAapP,EAAEwB,OAAOe,OACvC2D,SAAUmJ,EACVxO,UAAWrB,EAAQf,aACnBqN,YAAuB,QAAVxG,EACT,iDACA,6CAGN5E,IAAAC,cAACiC,IAAM,CACLhB,QAAQ,YACRpD,MAAM,UACN4D,QAjEgB8G,UACpB,GAAKiG,EAAUtC,OAAf,CAEAyC,GAAe,GACfG,EAAS,MAET,IACE,MAAMtG,QAAiBC,MAAM,eAAgB,CAC3CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnByF,cAAeA,EACfC,UAAWA,MAIf,IAAKhG,EAASa,GACZ,MAAM,IAAIC,MAAM,uBAADnJ,OAAwBqI,EAASe,SAGlD,MAAMzB,QAAaU,EAASiB,OAExB3B,EAAK4B,MACPoF,EAAShH,EAAK4B,OAEdmF,EAAkB/G,GAEpB,MAAO8B,GACPC,QAAQH,MAAM,4BAA6BE,GAC3CkF,EAAS,6BAAD3O,OAA8ByJ,EAAIE,UAC3C,QACC6E,GAAe,MAiCbpJ,SAAUmJ,IAAgBF,EAAUtC,QACrC,kBAEEwC,GAAe3O,IAAAC,cAACgK,IAAgB,CAAC3E,KAAM,GAAInF,UAAWrB,EAAQwP,kBAGhE3E,GACC3J,IAAAC,cAACe,IAAG,CAACgO,GAAI,GACPhP,IAAAC,cAACgB,IAAU,CAACnD,MAAM,SAAS6L,IAI9BkF,GACC7O,IAAAC,cAAAD,IAAAgK,SAAA,KACEhK,IAAAC,cAAC8M,IAAO,CAAC5M,UAAWrB,EAAQ0N,gBAE5BxM,IAAAC,cAACgB,IAAU,CAACC,QAAQ,YAAYC,cAAY,GAAC,gBAI7CnB,IAAAC,cAACe,IAAG,CAACb,UAAWrB,EAAQsP,aACtBpO,IAAAC,cAACgB,IAAU,CAACC,QAAQ,SACjB2N,EAAepG,WAInBoG,EAAe/B,aACd9M,IAAAC,cAACe,IAAG,CAACgO,GAAI,GACPhP,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,iBAAgB,kBArG1CkP,KAClB,QAAWC,IAAPD,GAA2B,OAAPA,GAAeE,MAAMF,GAAK,MAAO,IACzD,MAAMG,EAAMC,OAAOJ,GACnB,OAAIG,EAAM,IAAY,GAAN/M,OAAU+M,EAAIrB,QAAQ,GAAE,OAClC,GAAN1L,QAAW+M,EAAM,KAAMrB,QAAQ,GAAE,OAkGLuB,CAAWwB,EAAe/B,YAAYQ,gBAAgB,OAAKuB,EAAe/B,YAAYS,WA1DzF,MCyHd0B,OAhMf,SAAmBrQ,GAAmB,IAAlB,YAAEsQ,GAAatQ,EACjC,MAAOuQ,EAAQC,GAAanQ,mBAAS,KAC9BoQ,EAAQC,GAAarQ,mBAAS,KAC9BwJ,EAAU8G,GAAetQ,mBAAS,KAClCuQ,EAASC,GAAcxQ,oBAAS,IAChC0K,EAAOoF,GAAY9P,mBAAS,KAG5BqI,EAAYC,GAAiBtI,mBAAS,UACtCyQ,EAAUC,GAAe1Q,mBAAS,KAClCkB,EAAWyP,GAAgB3Q,mBAAS,KACpC4Q,EAAUC,GAAe7Q,mBAAS,GAuEzC,OACEe,IAAAC,cAACC,IAAK,CAACa,MAAO,CAAEnE,QAAS,KACvBoD,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,0BAGtCnB,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQpD,MAAM,gBAAgBqD,cAAY,GAAC,gWAG/DnB,IAAAC,cAACwE,IAAI,CAACC,WAAS,EAAC7H,QAAS,GACvBmD,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACrBxN,IAAAC,cAAC4K,IAAW,CAACpF,WAAS,EAACvE,QAAQ,WAAWoE,KAAK,SAC7CtF,IAAAC,cAAC6K,IAAU,CAACrH,GAAG,qBAAoB,eACnCzD,IAAAC,cAAC8K,IAAM,CACLC,QAAQ,oBACRnJ,MAAOyF,EACPzG,SAAWvB,GAAMiI,EAAcjI,EAAEwB,OAAOe,OACxCwD,MAAM,eAENrF,IAAAC,cAACiL,IAAQ,CAACrJ,MAAM,SAAQ,0BACxB7B,IAAAC,cAACiL,IAAQ,CAACrJ,MAAM,UAAS,qBACzB7B,IAAAC,cAACiL,IAAQ,CAACrJ,MAAM,SAAQ,yBAI9B7B,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACrBxN,IAAAC,cAACkL,IAAS,CACR9F,MAAM,4BACNxD,MAAOsN,EACPtO,SAAWvB,GAAM8P,EAAU9P,EAAEwB,OAAOe,OACpC4D,WAAS,EACTvE,QAAQ,WACRoE,KAAK,QACL7F,KAAK,WACL2L,YAAY,YAIA,WAAf9D,GACCtH,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACrBxN,IAAAC,cAACkL,IAAS,CACR9F,MAAM,WACNxD,MAAO6N,EACP7O,SAAWvB,GAAMqQ,EAAYrQ,EAAEwB,OAAOe,OACtC4D,WAAS,EACTvE,QAAQ,WACRoE,KAAK,WAIK,UAAfgC,GACCtH,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACrBxN,IAAAC,cAACkL,IAAS,CACR9F,MAAM,aACNxD,MAAO1B,EACPU,SAAWvB,GAAMsQ,EAAatQ,EAAEwB,OAAOe,OACvC4D,WAAS,EACTvE,QAAQ,WACRoE,KAAK,QACL8F,YAAY,2BAIlBpL,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACrBxN,IAAAC,cAACkL,IAAS,CACR9F,MAAM,YACNxD,MAAOgO,EACPhP,SAAWvB,GAAMwQ,EAAYxQ,EAAEwB,OAAOe,OACtC4D,WAAS,EACTvE,QAAQ,WACRoE,KAAK,QACL7F,KAAK,SACLsQ,WAAY,CAAEC,IAAK,EAAGC,IAAK,OAI/BjQ,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAACkL,IAAS,CACR9F,MAAM,gBACNxD,MAAOwN,EACPxO,SAAWvB,GAAMgQ,EAAUhQ,EAAEwB,OAAOe,OACpC4D,WAAS,EACTyK,WAAS,EACTC,KAAM,EACNjP,QAAQ,WACRkK,YAA4B,UAAf9D,EAAyB,gGAAuB,gHAGhEqC,GACC3J,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAACgB,IAAU,CAACnD,MAAM,SAAS6L,IAG/B3J,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAAA,OAAKc,MAAO,CAAEjE,QAAS,OAAQ2P,IAAK,IAClCzM,IAAAC,cAACiC,IAAM,CAACpE,MAAM,UAAUoD,QAAQ,YAAYQ,QAnKvC8G,UACbuG,EAAS,IACTQ,EAAY,IACZ,MAAMa,GAAKf,GAAU,IAAIlD,OACzB,IAAKiE,EAA6B,YAAxBrB,EAAS,sDAGnB,MAAMlG,EAAO,CACX4F,UAAW2B,EACX9I,WAAYA,EACZ4E,UAAWkB,OAAOyC,IAAa,GAGjC,GADIV,IAAQtG,EAAKwH,QAAUlB,GACR,UAAf7H,EAAwB,CAC1B,IAAK4H,EAAwD,YAAzCH,EAAS,wIAC7BlG,EAAKG,MAAQkG,OACR,GAAmB,WAAf5H,EAAyB,CAClC,IAAKoI,EAASvD,OAAwC,YAA9B4C,EAAS,kDACjClG,EAAK6G,SAAWA,EAASvD,YACpB,GAAmB,UAAf7E,EAAwB,CACjC,IAAKnH,EAAUgM,OAA0C,YAAhC4C,EAAS,oDAClClG,EAAKuD,WAAajM,EAAUgM,OAG9BsD,GAAW,GACX,IACE,MAAMa,QAAY5H,MAAM,wBAAyB,CAC/CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B2H,YAAa,UACb1H,KAAMC,KAAKC,UAAUF,KAGvB,IAAKyH,EAAIhH,GAAI,CACX,IAAIkH,QAAYF,EAAIG,OACpB,IAAMD,EAAM1H,KAAKC,UAAUD,KAAK4H,MAAMF,GAAM,KAAM,GAAM,MAAAG,IACxD,MAAM,IAAIpH,MAAMiH,GAElB,MAAMzI,QAAauI,EAAI5G,OACjBkH,EAAI,UAAAxQ,OAAa2H,EAAKnD,OAAS,IAAG,gBAAAxE,OAAe2H,EAAK8I,aAAe,IAAG,KAG9E,IAAIC,EAAgB,GAChB/I,EAAKgJ,WAAahJ,EAAKgJ,UAAUxF,OAAS,IAC5CuF,EAAgB,mCAChB/I,EAAKgJ,UAAUC,QAAQ,CAACnM,EAAM2G,KAC5BsF,GAAa,GAAA1Q,OAAOoL,EAAQ,EAAC,UAAApL,OAASyE,EAAKpB,IAAM,IAAG,MAChDoB,EAAK+L,OACPE,GAAa,0BAAA1Q,OAAeyE,EAAK+L,KAAK/E,OAAS,IAAG,MAClDiF,GAAa,0BAAA1Q,OAAeyE,EAAK+L,KAAK7E,YAAc,IAAG,OAEzD+E,GAAa,0BAAA1Q,OAAeyE,EAAK6G,SAAW7G,EAAK6G,SAASI,QAAQ,GAAK,IAAG,SAI9EyD,GAAaxH,EAAKkJ,QAAU,yBAAYH,EAAgB,YAAcF,GACtE,MAAOtR,GACPyP,EAAS,UAAYzP,EAAEyK,SACxB,QACC0F,GAAW,KAwGwDjK,SAAUgK,GACpEA,EAAU,aAAe,iBAE5BxP,IAAAC,cAACiC,IAAM,CAAChB,QAAQ,WAAWQ,QAvGrBwP,KACd5B,EAAU,IACVC,EAAY,IACZR,EAAS,MAoG4C,WAGjD/O,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAAC8M,IAAO,CAAChM,MAAO,CAAEwF,OAAQ,YAC1BvG,IAAAC,cAACgB,IAAU,CAACC,QAAQ,YAAYpD,MAAM,iBAAgB,YACtDkC,IAAAC,cAAA,OAAKc,MAAO,CAAEsN,WAAY,WAAY8C,WAAY,4BAA8B1I,O,OCpL1F,MAAM/L,GAAQ0U,YAAe,CAC3B3K,QAAS,CACPC,QAAS,CACPC,KAAM,WAERkH,UAAW,CACTlH,KAAM,YAGV0K,WAAY,CACVF,WAAY,+BA6LDG,OAzLf,WACE,MAAOC,EAAeC,GAAoBvS,mBAAS,OAC5CiQ,EAAauC,GAAkBxS,mBAAS,KACxCqE,EAAeoO,GAAoBzS,mBAAS,KAC5CmE,EAAcuO,GAAmB1S,oBAAS,IAC1C4H,EAAS+K,GAAc3S,mBAAS,OAChC0K,EAAOoF,GAAY9P,mBAAS,OAC5BoE,EAAcwO,GAAmB5S,mBAAS,CAC/C8E,MAAM,EACNC,MAAM,EACNE,KAAK,IA2FP,OAvFA4N,oBAAU,KACRpJ,MAAM,eACHqJ,KAAKtJ,GAAYA,EAASiB,QAC1BqI,KAAKhK,IACJ8J,EAAgB9J,EAAKvE,UAEtBwO,MAAMnI,IACLC,QAAQH,MAAM,6BAA8BE,GAC5CkF,EAAS,mFAEZ,IA8ED/O,IAAAC,cAACgS,IAAa,CAACvV,MAAOA,IACpBsD,IAAAC,cAACe,IAAG,CAACD,MAAO,CAAE2B,SAAU,IACtB1C,IAAAC,cAACiS,IAAM,CAAC/T,SAAS,UACf6B,IAAAC,cAACkS,IAAO,KACNnS,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKH,MAAO,CAAE2B,SAAU,IAAK,uCAKrD1C,IAAAC,cAACmS,IAAS,CAAC1H,SAAS,KAAK3J,MAAO,CAAE9C,UAAWvB,GAAMG,QAAQ,GAAIkB,aAAcrB,GAAMG,QAAQ,KACzFmD,IAAAC,cAACwE,IAAI,CAACC,WAAS,EAAC7H,QAAS,GACvBmD,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAACC,IAAK,CAACa,MAAO,CAAEnE,QAASF,GAAMG,QAAQ,KACrCmD,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,mDAGtCnB,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQmR,WAAS,GAAC,yFAGtCrS,IAAAC,cAACgB,IAAU,CAACC,QAAQ,QAAQiB,UAAU,OACpCnC,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAID,IAAAC,cAAA,cAAQ,UAAe,wCAC3BD,IAAAC,cAAA,UAAID,IAAAC,cAAA,cAAQ,QAAa,gDACzBD,IAAAC,cAAA,UAAID,IAAAC,cAAA,cAAQ,OAAY,qDAMhCD,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACrBxN,IAAAC,cAACtB,EAAa,CAACE,cA1GAmK,IAMzB,GALAwI,EAAiBxI,GACjB4I,EAAW,MACX7C,EAAS,MAGL/F,aAAiBsJ,KAAM,CACzB,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,KACd,MAAMC,EAAUH,EAAO9I,OACvBgI,EAAkC,kBAAZiB,EAAuBA,EAAU,KAEzDH,EAAOI,QAAU,IAAMlB,EAAe,IACtCc,EAAOK,cAAc5J,QAErByI,EAAe,QA8FTzR,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI0I,GAAI,GACrBxN,IAAAC,cAACgD,EAAa,CACZC,cA5Fa0B,IACzB8M,EAAiB9M,GACjBgN,EAAW,MACX7C,EAAS,OA0FG5L,UAvFOqF,UACnB,IAAK+I,IAAkBjO,EAErB,YADAyL,EAAS,2CAIX4C,GAAgB,GAChB5C,EAAS,MAGT,MAAM8D,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASxB,GAEzB,IAAIyB,EAAW,GACf,OAAQ1P,GACN,IAAK,OACH0P,EAAW,mBACX,MACF,IAAK,OACHA,EAAW,mBACX,MACF,IAAK,MACHA,EAAW,oBACX,MACF,QAGE,OAFAjE,EAAS,gCACT4C,GAAgB,GAIpB,IACE,MAAMlJ,QAAiBC,MAAMsK,EAAU,CACrCrK,OAAQ,OACRE,KAAMgK,IAGR,IAAKpK,EAASa,GACZ,MAAM,IAAIC,MAAM,uBAADnJ,OAAwBqI,EAASe,SAGlD,MAAMzB,QAAaU,EAASiB,OAC5BkI,EAAW,CAAEhN,MAAOtB,EAAeyE,SACnC,MAAO8B,GACPC,QAAQH,MAAM,0BAA2BE,GACzCkF,EAAS,2BAAD3O,OAA4ByJ,EAAIE,UACzC,QACC4H,GAAgB,KA0CNvO,aAAcA,EACdC,aAAcA,EACdC,cAAeA,EACfC,gBAAiBgO,KAIpB5H,GACC3J,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAACC,IAAK,CAACa,MAAO,CAAEnE,QAASF,GAAMG,QAAQ,GAAIS,gBAAiB,YAC1D0C,IAAAC,cAACgB,IAAU,CAACnD,MAAM,SAAS6L,KAKhCvG,GACCpD,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI/D,MAAO,CAAEiC,UAAW,SAAUuD,OAAO,GAADnG,OAAK1D,GAAMG,QAAQ,GAAE,UAC1EmD,IAAAC,cAACgK,IAAgB,MACjBjK,IAAAC,cAACgB,IAAU,CAACC,QAAQ,KAAKH,MAAO,CAAE9C,UAAWvB,GAAMG,QAAQ,KAAM,wBAMpEgK,GACC7G,IAAAC,cAAAD,IAAAgK,SAAA,KACEhK,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAAC0M,GAAa,CAAC9F,QAASA,KAE1B7G,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAACsO,GAAW,CAACC,cAAe3H,EAAQkB,KAAMnD,MAAOiC,EAAQjC,UAM/D5E,IAAAC,cAACwE,IAAI,CAACI,MAAI,EAACC,GAAI,IACb9E,IAAAC,cAACgP,GAAU,CAACC,YAAaA,UCvMxB+D,OAZUC,IACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpB,KAAKnT,IAAkD,IAAjD,OAAEwU,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS5U,EACpEwU,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,MCDdO,IAASC,OACP1T,IAAAC,cAACD,IAAM2T,WAAU,KACf3T,IAAAC,cAACqR,GAAG,OAENsC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fe247ab2.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { \n  Paper, \n  Typography, \n  Box, \n  Button, \n  IconButton \n} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '100%',\n    minHeight: 300,\n    transition: 'all 0.3s ease'\n  },\n  dragActive: {\n    border: '2px dashed #3f51b5',\n    backgroundColor: 'rgba(63, 81, 181, 0.05)'\n  },\n  dragInactive: {\n    border: '2px dashed #ccc',\n    backgroundColor: 'white'\n  },\n  uploadBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    cursor: 'pointer'\n  },\n  uploadIcon: {\n    fontSize: 60,\n    color: '#3f51b5',\n    marginBottom: theme.spacing(2)\n  },\n  supportText: {\n    marginTop: theme.spacing(2)\n  },\n  previewBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    position: 'relative'\n  },\n  imageContainer: {\n    position: 'relative',\n    width: '100%',\n    // Use viewport-based height so any aspect ratio fits inside\n    height: '60vh',\n    [theme.breakpoints.down('sm')]: {\n      height: '45vh',\n    },\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    marginTop: theme.spacing(2),\n  },\n  deleteButton: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.9)',\n    }\n  }\n}));\n\nconst ImageUploader = ({ onImageUpload }) => {\n  const classes = useStyles();\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [dragActive, setDragActive] = useState(false);\n  const fileInputRef = useRef(null);\n\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFiles(e.dataTransfer.files[0]);\n    }\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n      handleFiles(e.target.files[0]);\n    }\n  };\n\n  const handleFiles = (file) => {\n    if (file.type.startsWith('image/')) {\n      setPreviewUrl(URL.createObjectURL(file));\n      onImageUpload(file);\n    } else {\n      alert('Please upload an image file');\n    }\n  };\n\n  const onButtonClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleRemoveImage = () => {\n    setPreviewUrl(null);\n    onImageUpload(null);\n    fileInputRef.current.value = \"\";\n  };\n\n  return (\n    <Paper \n      className={`${classes.paper} ${dragActive ? classes.dragActive : classes.dragInactive}`}\n      onDragEnter={handleDrag}\n      onDragLeave={handleDrag}\n      onDragOver={handleDrag}\n      onDrop={handleDrop}\n    >\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleChange}\n        style={{ display: 'none' }}\n      />\n\n      {!previewUrl ? (\n        <Box \n          className={classes.uploadBox}\n          onClick={onButtonClick}\n        >\n          <CloudUploadIcon className={classes.uploadIcon} />\n          <Typography variant=\"h6\" gutterBottom>\n            Drag & Drop an image here\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n            or\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"span\"\n            startIcon={<CloudUploadIcon />}\n          >\n            Browse Files\n          </Button>\n          <Typography variant=\"body2\" color=\"textSecondary\" className={classes.supportText}>\n            Supported formats: JPG, PNG, GIF\n          </Typography>\n        </Box>\n      ) : (\n        <Box className={classes.previewBox}>\n          <Typography variant=\"h6\" gutterBottom>\n            Preview\n          </Typography>\n          <Box className={classes.imageContainer}>\n            <img\n              src={previewUrl}\n              alt=\"Preview\"\n              className=\"preview-image\"\n              style={{\n                width: '100%',\n                height: 'auto',\n                maxHeight: '100%',\n                objectFit: 'contain',\n                display: 'block'\n              }}\n            />\n            <IconButton\n              aria-label=\"delete\"\n              className={classes.deleteButton}\n              onClick={handleRemoveImage}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Box>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n\nexport default ImageUploader;\n","import React from 'react';\nimport { \n  Grid, \n  Card, \n  CardContent, \n  CardActions, \n  Typography, \n  Button, \n  Chip,\n  Box\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  selectedCard: {\n    border: '2px solid #3f51b5',\n  },\n  unavailableCard: {\n    opacity: 0.6,\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  chipContainer: {\n    marginBottom: theme.spacing(1.5),\n  },\n  successChip: {\n    backgroundColor: '#34C759',\n    color: '#fff',\n  },\n  errorChip: {\n    backgroundColor: '#FF3B3F',\n    color: '#fff',\n  },\n  modelType: {\n    marginTop: theme.spacing(1),\n  },\n  processButton: {\n    marginTop: theme.spacing(3),\n    textAlign: 'center',\n  }\n}));\n\nconst ModelSelector = ({ \n  onModelSelect, \n  onProcess, \n  isProcessing, \n  modelsStatus, \n  selectedModel,\n  imageSelected \n}) => {\n  const classes = useStyles();\n  \n  const models = [\n    {\n      id: 'yolo',\n      name: 'YOLOv8',\n      description: 'Fast and accurate object detection',\n      icon: <VisibilityIcon />,\n      available: modelsStatus.yolo\n    },\n    {\n      id: 'detr',\n      name: 'DETR',\n      description: 'DEtection TRansformer for object detection',\n      icon: <VisibilityIcon />,\n      available: modelsStatus.detr\n    },\n    {\n      id: 'vit',\n      name: 'ViT',\n      description: 'Vision Transformer for image classification',\n      icon: <CategoryIcon />,\n      available: modelsStatus.vit\n    }\n  ];\n\n  const handleModelClick = (modelId) => {\n    if (models.find(m => m.id === modelId).available) {\n      onModelSelect(modelId);\n    }\n  };\n\n  return (\n    <Box sx={{ p: 2, height: '100%' }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Select Model\n      </Typography>\n      \n      <Grid container spacing={2}>\n        {models.map((model) => (\n          <Grid item xs={12} sm={4} key={model.id}>\n            <Card \n              className={`\n                ${classes.card} \n                ${selectedModel === model.id ? classes.selectedCard : ''} \n                ${!model.available ? classes.unavailableCard : ''}\n              `}\n              onClick={() => handleModelClick(model.id)}\n            >\n              <CardContent className={classes.cardContent}>\n                <Box sx={{ mb: 2, color: 'primary' }}>\n                  {model.icon}\n                </Box>\n                <Typography variant=\"h5\" component=\"div\" gutterBottom>\n                  {model.name}\n                </Typography>\n                <div className={classes.chipContainer}>\n                  {model.available ? (\n                    <Chip \n                      label=\"Available\" \n                      className={classes.successChip}\n                      size=\"small\" \n                    />\n                  ) : (\n                    <Chip \n                      label=\"Not Available\" \n                      className={classes.errorChip}\n                      size=\"small\" \n                    />\n                  )}\n                </div>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {model.description}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button \n                  size=\"small\" \n                  onClick={() => handleModelClick(model.id)}\n                  disabled={!model.available}\n                  color={selectedModel === model.id ? \"primary\" : \"default\"}\n                  variant={selectedModel === model.id ? \"contained\" : \"outlined\"}\n                  fullWidth\n                >\n                  {selectedModel === model.id ? 'Selected' : 'Select'}\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      <div className={classes.processButton}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          startIcon={<PlayArrowIcon />}\n          onClick={onProcess}\n          disabled={!selectedModel || !imageSelected || isProcessing}\n        >\n          {isProcessing ? 'Processing...' : 'Process Image'}\n        </Button>\n      </div>\n    </Box>\n  );\n};\n\nexport default ModelSelector;\n","import React, { useState } from 'react';\nimport { \n  Button, \n  Box, \n  Typography, \n  CircularProgress, \n  Snackbar,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Chip\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2),\n    backgroundColor: '#f5f5f5',\n    borderRadius: theme.shape.borderRadius,\n  },\n  button: {\n    marginRight: theme.spacing(2),\n  },\n  searchDialog: {\n    minWidth: '500px',\n  },\n  formControl: {\n    marginBottom: theme.spacing(2),\n    minWidth: '100%',\n  },\n  searchResults: {\n    marginTop: theme.spacing(2),\n  },\n  resultCard: {\n    marginBottom: theme.spacing(2),\n  },\n  resultImage: {\n    height: 140,\n    objectFit: 'contain',\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  similarityChip: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n  }\n}));\n\nconst VectorDBActions = ({ results }) => {\n  const classes = useStyles();\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n  const [openSearchDialog, setOpenSearchDialog] = useState(false);\n  const [searchType, setSearchType] = useState('image');\n  const [searchClass, setSearchClass] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchError, setSearchError] = useState(null);\n  \n  // Extract model and data from results\n  const { model, data } = results;\n  \n  // Handle saving to vector DB\n  const handleSaveToVectorDB = async () => {\n    setIsSaving(true);\n    setSaveError(null);\n    \n    try {\n      let response;\n      \n      if (model === 'vit') {\n        // For ViT, save the whole image with classifications\n        response = await fetch('/api/add-to-collection', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            image: data.image,\n            metadata: {\n              model: 'vit',\n              classifications: data.classifications\n            }\n          })\n        });\n      } else {\n        // For YOLO and DETR, save detected objects\n        response = await fetch('/api/add-detected-objects', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            image: data.image,\n            objects: data.detections,\n            imageId: generateUUID()\n          })\n        });\n      }\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      \n      if (result.error) {\n        throw new Error(result.error);\n      }\n      \n      setSaveSuccess(true);\n      setTimeout(() => setSaveSuccess(false), 5000);\n    } catch (err) {\n      console.error('Error saving to vector DB:', err);\n      setSaveError(`Error saving to vector DB: ${err.message}`);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Handle opening search dialog\n  const handleOpenSearchDialog = () => {\n    setOpenSearchDialog(true);\n    setSearchResults([]);\n    setSearchError(null);\n  };\n  \n  // Handle closing search dialog\n  const handleCloseSearchDialog = () => {\n    setOpenSearchDialog(false);\n  };\n  \n  // Handle search type change\n  const handleSearchTypeChange = (event) => {\n    setSearchType(event.target.value);\n    setSearchResults([]);\n    setSearchError(null);\n  };\n  \n  // Handle search class change\n  const handleSearchClassChange = (event) => {\n    setSearchClass(event.target.value);\n  };\n  \n  // Handle search\n  const handleSearch = async () => {\n    setIsSearching(true);\n    setSearchError(null);\n    \n    try {\n      let requestBody = {};\n      \n      if (searchType === 'image') {\n        // Search by current image\n        requestBody = {\n          searchType: 'image',\n          image: data.image,\n          n_results: 5\n        };\n      } else {\n        // Search by class name\n        if (!searchClass.trim()) {\n          throw new Error('Please enter a class name');\n        }\n        \n        requestBody = {\n          searchType: 'class',\n          class_name: searchClass.trim(),\n          n_results: 5\n        };\n      }\n      \n      const response = await fetch('/api/search-similar-objects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody)\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      \n      if (result.error) {\n        throw new Error(result.error);\n      }\n      \n      console.log('Search API response:', result);\n      \n      // The backend responds with {success, searchType, results} structure, so extract only the results array\n      if (result.success && Array.isArray(result.results)) {\n        console.log('Setting search results array:', result.results);\n        console.log('Results array length:', result.results.length);\n        console.log('First result item:', result.results[0]);\n        setSearchResults(result.results);\n      } else {\n        console.error('Unexpected API response format:', result);\n        throw new Error('Unexpected API response format');\n      }\n    } catch (err) {\n      console.error('Error searching vector DB:', err);\n      setSearchError(`Error searching vector DB: ${err.message}`);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  \n  // Generate UUID for image ID\n  const generateUUID = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      const r = Math.random() * 16 | 0;\n      const v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  };\n  \n  // Render search results\n  const renderSearchResults = () => {\n    console.log('Rendering search results:', searchResults);\n    console.log('Search results length:', searchResults.length);\n    \n    if (searchResults.length === 0) {\n      console.log('No results to render');\n      return (\n        <Typography variant=\"body1\">No results found.</Typography>\n      );\n    }\n    \n    return (\n      <Grid container spacing={2}>\n        {searchResults.map((result, index) => {\n          const similarity = (1 - result.distance) * 100;\n          \n          return (\n            <Grid item xs={12} sm={6} key={index}>\n              <Card className={classes.resultCard}>\n                {result.metadata && result.metadata.image_data ? (\n                  <CardMedia\n                    className={classes.resultImage}\n                    component=\"img\"\n                    height=\"200\"\n                    image={`data:image/jpeg;base64,${result.metadata.image_data}`}\n                    alt={result.metadata && result.metadata.class ? result.metadata.class : 'Object'}\n                  />\n                ) : (\n                  <Box \n                    className={classes.resultImage}\n                    style={{ \n                      backgroundColor: '#f0f0f0', \n                      display: 'flex', \n                      alignItems: 'center', \n                      justifyContent: 'center',\n                      height: 200\n                    }}\n                  >\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {result.metadata && result.metadata.class ? result.metadata.class : 'Object'} Image\n                    </Typography>\n                  </Box>\n                )}\n                <CardContent>\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\n                    <Typography variant=\"subtitle1\">Result #{index + 1}</Typography>\n                    <Chip \n                      label={`Similarity: ${similarity.toFixed(2)}%`}\n                      className={classes.similarityChip}\n                      size=\"small\"\n                    />\n                  </Box>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    <strong>Class:</strong> {result.metadata.class || 'N/A'}\n                  </Typography>\n                  {result.metadata.confidence && (\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      <strong>Confidence:</strong> {(result.metadata.confidence * 100).toFixed(2)}%\n                    </Typography>\n                  )}\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    <strong>Object ID:</strong> {result.id}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  };\n  \n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h6\" gutterBottom>\n        Vector Database Actions\n      </Typography>\n      \n      <Box display=\"flex\" alignItems=\"center\" mb={2}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSaveToVectorDB}\n          disabled={isSaving}\n          className={classes.button}\n        >\n          {isSaving ? (\n            <>\n              <CircularProgress size={20} color=\"inherit\" style={{ marginRight: 8 }} />\n              Saving...\n            </>\n          ) : (\n            'Save to Vector DB'\n          )}\n        </Button>\n        \n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleOpenSearchDialog}\n          className={classes.button}\n        >\n          Search Similar\n        </Button>\n      </Box>\n      \n      {saveError && (\n        <Alert severity=\"error\" style={{ marginTop: 8 }}>\n          {saveError}\n        </Alert>\n      )}\n      \n      <Snackbar open={saveSuccess} autoHideDuration={5000} onClose={() => setSaveSuccess(false)}>\n        <Alert severity=\"success\">\n          {model === 'vit' ? (\n            'Image and classifications successfully saved to vector DB!'\n          ) : (\n            'Detected objects successfully saved to vector DB!'\n          )}\n        </Alert>\n      </Snackbar>\n      \n      {/* Search Dialog */}\n      <Dialog\n        open={openSearchDialog}\n        onClose={handleCloseSearchDialog}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>Search Vector Database</DialogTitle>\n        <DialogContent>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"search-type-label\">Search Type</InputLabel>\n            <Select\n              labelId=\"search-type-label\"\n              id=\"search-type\"\n              value={searchType}\n              onChange={handleSearchTypeChange}\n            >\n              <MenuItem value=\"image\">Search by Current Image</MenuItem>\n              <MenuItem value=\"class\">Search by Class Name</MenuItem>\n            </Select>\n          </FormControl>\n          \n          {searchType === 'class' && (\n            <FormControl className={classes.formControl}>\n              <TextField\n                label=\"Class Name\"\n                value={searchClass}\n                onChange={handleSearchClassChange}\n                placeholder=\"e.g. person, car, dog...\"\n                fullWidth\n              />\n            </FormControl>\n          )}\n          \n          {searchError && (\n            <Alert severity=\"error\" style={{ marginBottom: 16 }}>\n              {searchError}\n            </Alert>\n          )}\n          \n          <Box className={classes.searchResults}>\n            {isSearching ? (\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" p={4}>\n                <CircularProgress />\n                <Typography variant=\"body1\" style={{ marginLeft: 16 }}>\n                  Searching...\n                </Typography>\n              </Box>\n            ) : (\n              <>\n                {console.log('Search dialog render - searchResults:', searchResults)}\n                {searchResults.length > 0 ? renderSearchResults() : \n                  <Typography variant=\"body1\">No results found. Please try another search.</Typography>\n                }\n              </>\n            )}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseSearchDialog} color=\"default\">\n            Close\n          </Button>\n          <Button \n            onClick={handleSearch} \n            color=\"primary\" \n            variant=\"contained\"\n            disabled={isSearching || (searchType === 'class' && !searchClass.trim())}\n          >\n            Search\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default VectorDBActions;\n","import React from 'react';\nimport { \n  Paper, \n  Typography, \n  Box, \n  List, \n  ListItem, \n  ListItemText, \n  Divider,\n  Grid,\n  Chip\n} from '@material-ui/core';\nimport VectorDBActions from './VectorDBActions';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2)\n  },\n  marginBottom: {\n    marginBottom: theme.spacing(2)\n  },\n  resultImage: {\n    maxWidth: '100%',\n    maxHeight: '400px',\n    objectFit: 'contain'\n  },\n  dividerMargin: {\n    margin: `${theme.spacing(2)}px 0`\n  },\n  chipContainer: {\n    display: 'flex',\n    gap: theme.spacing(1),\n    flexWrap: 'wrap'\n  }\n}));\n\nconst ResultDisplay = ({ results }) => {\n  const classes = useStyles();\n  if (!results) return null;\n  \n  const { model, data } = results;\n  \n  // Helper to format times nicely\n  const formatTime = (ms) => {\n    if (ms === undefined || ms === null || isNaN(ms)) return '-';\n    const num = Number(ms);\n    if (num < 1000) return `${num.toFixed(2)} ms`;\n    return `${(num / 1000).toFixed(2)} s`;\n  };\n  \n  // Check if there's an error\n  if (data.error) {\n    return (\n      <Paper sx={{ p: 2, bgcolor: '#ffebee' }}>\n        <Typography color=\"error\">{data.error}</Typography>\n      </Paper>\n    );\n  }\n\n  // Display performance info\n  const renderPerformanceInfo = () => {\n    if (!data.performance) return null;\n    \n    return (\n      <Box className=\"performance-info\">\n        <Divider className={classes.dividerMargin} />\n        <Typography variant=\"body2\">\n          Inference time: {formatTime(data.performance.inference_time)} on {data.performance.device}\n        </Typography>\n      </Box>\n    );\n  };\n\n  // Render for YOLO and DETR (object detection)\n  if (model === 'yolo' || model === 'detr') {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" gutterBottom>\n          {model === 'yolo' ? 'YOLOv8' : 'DETR'} Detection Results\n        </Typography>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            {data.image && (\n              <Box className={classes.marginBottom}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Detection Result\n                </Typography>\n                <img \n                  src={`data:image/png;base64,${data.image}`} \n                  alt=\"Detection Result\" \n                  className={classes.resultImage}\n                />\n              </Box>\n            )}\n          </Grid>\n          \n          <Grid item xs={12} md={6}>\n            <Box className={classes.marginBottom}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Detected Objects:\n              </Typography>\n              \n              {data.detections && data.detections.length > 0 ? (\n                <List>\n                  {data.detections.map((detection, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem>\n                        <ListItemText \n                          primary={\n                            <Box style={{ display: 'flex', alignItems: 'center' }}>\n                              <Typography variant=\"body1\" component=\"span\">\n                                {detection.class}\n                              </Typography>\n                              <Chip \n                                label={`${(detection.confidence * 100).toFixed(0)}%`}\n                                size=\"small\"\n                                color=\"primary\"\n                                style={{ marginLeft: 8 }}\n                              />\n                            </Box>\n                          } \n                          secondary={`Bounding Box: [${detection.bbox.join(', ')}]`} \n                        />\n                      </ListItem>\n                      {index < data.detections.length - 1 && <Divider />}\n                    </React.Fragment>\n                  ))}\n                </List>\n              ) : (\n                <Typography variant=\"body1\">No objects detected</Typography>\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n        \n        {renderPerformanceInfo()}\n        \n        {/* Vector DB Actions for Object Detection */}\n        <VectorDBActions results={results} />\n      </Paper>\n    );\n  }\n  \n  // Render for ViT (classification)\n  if (model === 'vit') {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" gutterBottom>\n          ViT Classification Results\n        </Typography>\n        \n        <Typography variant=\"subtitle1\" gutterBottom>\n          Top Predictions:\n        </Typography>\n        \n        {data.top_predictions && data.top_predictions.length > 0 ? (\n          <List>\n            {data.top_predictions.map((prediction, index) => (\n              <React.Fragment key={index}>\n                <ListItem>\n                  <ListItemText \n                    primary={\n                      <Box style={{ display: 'flex', alignItems: 'center' }}>\n                        <Typography variant=\"body1\" component=\"span\">\n                          {prediction.rank}. {prediction.class}\n                        </Typography>\n                        <Chip \n                          label={`${(prediction.probability * 100).toFixed(1)}%`}\n                          size=\"small\"\n                          color={index === 0 ? \"primary\" : \"default\"}\n                          style={{ marginLeft: 8 }}\n                        />\n                      </Box>\n                    } \n                  />\n                </ListItem>\n                {index < data.top_predictions.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n          </List>\n        ) : (\n          <Typography variant=\"body1\">No classifications available</Typography>\n        )}\n        \n        {renderPerformanceInfo()}\n        \n        {/* Vector DB Actions for ViT Classification */}\n        <VectorDBActions results={results} />\n      </Paper>\n    );\n  }\n  \n  return null;\n};\n\nexport default ResultDisplay;\n","import React, { useState } from 'react';\nimport { \n  Paper, \n  Typography, \n  Box, \n  TextField, \n  Button, \n  CircularProgress,\n  Divider\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  },\n  marginBottom: {\n    marginBottom: theme.spacing(2)\n  },\n  dividerMargin: {\n    margin: `${theme.spacing(2)}px 0`\n  },\n  responseBox: {\n    padding: theme.spacing(2),\n    backgroundColor: '#f5f5f5',\n    borderRadius: theme.shape.borderRadius,\n    marginTop: theme.spacing(2),\n    whiteSpace: 'pre-wrap'\n  },\n  buttonProgress: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst LlmAnalysis = ({ visionResults, model }) => {\n  const classes = useStyles();\n  const [userQuery, setUserQuery] = useState('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Format time for display\n  const formatTime = (ms) => {\n    if (ms === undefined || ms === null || isNaN(ms)) return '-';\n    const num = Number(ms);\n    if (num < 1000) return `${num.toFixed(2)} ms`;\n    return `${(num / 1000).toFixed(2)} s`;\n  };\n\n  const handleAnalyze = async () => {\n    if (!userQuery.trim()) return;\n    \n    setIsAnalyzing(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          visionResults: visionResults,\n          userQuery: userQuery\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      if (data.error) {\n        setError(data.error);\n      } else {\n        setAnalysisResult(data);\n      }\n    } catch (err) {\n      console.error('Error analyzing with LLM:', err);\n      setError(`Error analyzing with LLM: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  if (!visionResults) return null;\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h6\" gutterBottom>\n        Ask AI about the {model === 'vit' ? 'Classification' : 'Detection'} Results\n      </Typography>\n      \n      <Typography variant=\"body2\" className={classes.marginBottom}>\n        Ask a question about the detected objects or classifications to get an AI-powered analysis.\n      </Typography>\n      \n      <TextField\n        fullWidth\n        label=\"Your question about the image\"\n        variant=\"outlined\"\n        value={userQuery}\n        onChange={(e) => setUserQuery(e.target.value)}\n        disabled={isAnalyzing}\n        className={classes.marginBottom}\n        placeholder={model === 'vit' \n          ? \"E.g., What category does this image belong to?\" \n          : \"E.g., How many people are in this image?\"}\n      />\n      \n      <Button \n        variant=\"contained\" \n        color=\"primary\"\n        onClick={handleAnalyze}\n        disabled={isAnalyzing || !userQuery.trim()}\n      >\n        Analyze with AI\n        {isAnalyzing && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </Button>\n      \n      {error && (\n        <Box mt={2}>\n          <Typography color=\"error\">{error}</Typography>\n        </Box>\n      )}\n      \n      {analysisResult && (\n        <>\n          <Divider className={classes.dividerMargin} />\n          \n          <Typography variant=\"subtitle1\" gutterBottom>\n            AI Analysis:\n          </Typography>\n          \n          <Box className={classes.responseBox}>\n            <Typography variant=\"body1\">\n              {analysisResult.response}\n            </Typography>\n          </Box>\n          \n          {analysisResult.performance && (\n            <Box mt={1}>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Analysis time: {formatTime(analysisResult.performance.inference_time)} on {analysisResult.performance.device}\n              </Typography>\n            </Box>\n          )}\n        </>\n      )}\n    </Paper>\n  );\n};\n\nexport default LlmAnalysis;\n","import React, { useState } from 'react';\nimport {\n  Paper,\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  Divider,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel\n} from '@material-ui/core';\n\n// Props:\n// - imageBase64: data URL string of the currently uploaded image (preferred for searchType=image)\nfunction OpenAIChat({ imageBase64 }) {\n  const [apiKey, setApiKey] = useState('');\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Vision RAG parameters\n  const [searchType, setSearchType] = useState('image');\n  const [objectId, setObjectId] = useState('');\n  const [className, setClassName] = useState('');\n  const [nResults, setNResults] = useState(5);\n\n  const onSend = async () => {\n    setError('');\n    setResponse('');\n    const q = (prompt || '').trim();\n    if (!q) { setError('질문을 입력하세요.'); return; }\n\n    // Build request body for /api/vision-rag/query\n    const body = {\n      userQuery: q,\n      searchType: searchType,\n      n_results: Number(nResults) || 5,\n    };\n    if (apiKey) body.api_key = apiKey;\n    if (searchType === 'image') {\n      if (!imageBase64) { setError('이미지가 필요합니다. 먼저 이미지를 업로드하세요.'); return; }\n      body.image = imageBase64;\n    } else if (searchType === 'object') {\n      if (!objectId.trim()) { setError('objectId를 입력하세요.'); return; }\n      body.objectId = objectId.trim();\n    } else if (searchType === 'class') {\n      if (!className.trim()) { setError('class_name을 입력하세요.'); return; }\n      body.class_name = className.trim();\n    }\n\n    setLoading(true);\n    try {\n      const res = await fetch('/api/vision-rag/query', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        credentials: 'include',\n        body: JSON.stringify(body)\n      });\n\n      if (!res.ok) {\n        let txt = await res.text();\n        try { txt = JSON.stringify(JSON.parse(txt), null, 2); } catch {}\n        throw new Error(txt);\n      }\n      const data = await res.json();\n      const meta = `Model: ${data.model || '-'} | Latency: ${data.latency_sec || '-'}s`;\n      \n      // 검색 결과 포맷팅\n      let retrievedText = '';\n      if (data.retrieved && data.retrieved.length > 0) {\n        retrievedText = '\\n\\n검색 결과:\\n';\n        data.retrieved.forEach((item, index) => {\n          retrievedText += `${index + 1}. ID: ${item.id || '-'}\\n`;\n          if (item.meta) {\n            retrievedText += `   클래스: ${item.meta.class || '-'}\\n`;\n            retrievedText += `   신뢰도: ${item.meta.confidence || '-'}\\n`;\n          }\n          retrievedText += `   유사도: ${item.distance ? item.distance.toFixed(4) : '-'}\\n`;\n        });\n      }\n      \n      setResponse((data.answer || '(빈 응답)') + retrievedText + '\\n\\n---\\n' + meta);\n    } catch (e) {\n      setError('Error: ' + e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onClear = () => {\n    setPrompt('');\n    setResponse('');\n    setError('');\n  };\n\n  return (\n    <Paper style={{ padding: 16 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Vision RAG (LangChain)\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n        서버에 OPENAI_API_KEY가 설정되어 있다면 API Key는 생략 가능합니다. 검색 유형을 선택하고 질문을 보내면, 벡터 DB에서 검색된 컨텍스트로 답변합니다.\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth variant=\"outlined\" size=\"small\">\n            <InputLabel id=\"search-type-label\">Search Type</InputLabel>\n            <Select\n              labelId=\"search-type-label\"\n              value={searchType}\n              onChange={(e) => setSearchType(e.target.value)}\n              label=\"Search Type\"\n            >\n              <MenuItem value=\"image\">image (current upload)</MenuItem>\n              <MenuItem value=\"object\">object (objectId)</MenuItem>\n              <MenuItem value=\"class\">class (class_name)</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            label=\"OpenAI API Key (optional)\"\n            value={apiKey}\n            onChange={(e) => setApiKey(e.target.value)}\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"password\"\n            placeholder=\"sk-...\"\n          />\n        </Grid>\n\n        {searchType === 'object' && (\n          <Grid item xs={12} md={6}>\n            <TextField\n              label=\"objectId\"\n              value={objectId}\n              onChange={(e) => setObjectId(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n            />\n          </Grid>\n        )}\n        {searchType === 'class' && (\n          <Grid item xs={12} md={6}>\n            <TextField\n              label=\"class_name\"\n              value={className}\n              onChange={(e) => setClassName(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              placeholder=\"e.g. person, car, dog\"\n            />\n          </Grid>\n        )}\n        <Grid item xs={12} md={6}>\n          <TextField\n            label=\"n_results\"\n            value={nResults}\n            onChange={(e) => setNResults(e.target.value)}\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"number\"\n            inputProps={{ min: 1, max: 50 }}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <TextField\n            label=\"User Question\"\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n            fullWidth\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            placeholder={searchType === 'image' ? '업로드한 이미지 기반으로 답변해줘' : '검색된 객체 컨텍스트를 사용해 답변해줘'}\n          />\n        </Grid>\n        {error && (\n          <Grid item xs={12}>\n            <Typography color=\"error\">{error}</Typography>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <div style={{ display: 'flex', gap: 8 }}>\n            <Button color=\"primary\" variant=\"contained\" onClick={onSend} disabled={loading}>\n              {loading ? 'Sending...' : 'Send Question'}\n            </Button>\n            <Button variant=\"outlined\" onClick={onClear}>Clear</Button>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider style={{ margin: '12px 0' }} />\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">Response</Typography>\n          <pre style={{ whiteSpace: 'pre-wrap', fontFamily: 'ui-monospace, monospace' }}>{response}</pre>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default OpenAIChat;\n","import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  Box, \n  Paper, \n  Grid, \n  CircularProgress,\n  AppBar,\n  Toolbar,\n  ThemeProvider,\n  createMuiTheme\n} from '@material-ui/core';\nimport ImageUploader from './components/ImageUploader';\nimport ModelSelector from './components/ModelSelector';\nimport ResultDisplay from './components/ResultDisplay';\nimport LlmAnalysis from './components/LlmAnalysis';\nimport OpenAIChat from './components/OpenAIChat';\nimport './App.css';\n\n// Create a theme\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3f51b5',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n  },\n  typography: {\n    fontFamily: 'Roboto, Arial, sans-serif',\n  },\n});\n\nfunction App() {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageBase64, setImageBase64] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [modelsStatus, setModelsStatus] = useState({\n    yolo: false,\n    detr: false,\n    vit: false\n  });\n\n  // Check API status on component mount\n  useEffect(() => {\n    fetch('/api/status')\n      .then(response => response.json())\n      .then(data => {\n        setModelsStatus(data.models);\n      })\n      .catch(err => {\n        console.error('Error checking API status:', err);\n        setError('Error connecting to the backend API. Please make sure the server is running.');\n      });\n  }, []);\n\n  const handleImageUpload = (image) => {\n    setSelectedImage(image);\n    setResults(null);\n    setError(null);\n\n    // Convert uploaded File -> base64 data URL for Vision RAG image search\n    if (image instanceof File) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const dataUrl = reader.result; // e.g., data:image/png;base64,....\n        setImageBase64(typeof dataUrl === 'string' ? dataUrl : '');\n      };\n      reader.onerror = () => setImageBase64('');\n      reader.readAsDataURL(image);\n    } else {\n      setImageBase64('');\n    }\n  };\n\n  const handleModelSelect = (model) => {\n    setSelectedModel(model);\n    setResults(null);\n    setError(null);\n  };\n\n  const processImage = async () => {\n    if (!selectedImage || !selectedModel) {\n      setError('Please select both an image and a model');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError(null);\n\n    // Create form data for the image\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n\n    let endpoint = '';\n    switch (selectedModel) {\n      case 'yolo':\n        endpoint = '/api/detect/yolo';\n        break;\n      case 'detr':\n        endpoint = '/api/detect/detr';\n        break;\n      case 'vit':\n        endpoint = '/api/classify/vit';\n        break;\n      default:\n        setError('Invalid model selection');\n        setIsProcessing(false);\n        return;\n    }\n\n    try {\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setResults({ model: selectedModel, data });\n    } catch (err) {\n      console.error('Error processing image:', err);\n      setError(`Error processing image: ${err.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box style={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n              Multi-Model Object Detection Demo\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Container maxWidth=\"lg\" style={{ marginTop: theme.spacing(4), marginBottom: theme.spacing(4) }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper style={{ padding: theme.spacing(2) }}>\n                <Typography variant=\"h5\" gutterBottom>\n                  Upload an image to see how each model performs!\n                </Typography>\n                <Typography variant=\"body1\" paragraph>\n                  This demo showcases three different object detection and image classification models:\n                </Typography>\n                <Typography variant=\"body1\" component=\"div\">\n                  <ul>\n                    <li><strong>YOLOv8</strong>: Fast and accurate object detection</li>\n                    <li><strong>DETR</strong>: DEtection TRansformer for object detection</li>\n                    <li><strong>ViT</strong>: Vision Transformer for image classification</li>\n                  </ul>\n                </Typography>\n              </Paper>\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <ImageUploader onImageUpload={handleImageUpload} />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <ModelSelector \n                onModelSelect={handleModelSelect} \n                onProcess={processImage}\n                isProcessing={isProcessing}\n                modelsStatus={modelsStatus}\n                selectedModel={selectedModel}\n                imageSelected={!!selectedImage}\n              />\n            </Grid>\n            \n            {error && (\n              <Grid item xs={12}>\n                <Paper style={{ padding: theme.spacing(2), backgroundColor: '#ffebee' }}>\n                  <Typography color=\"error\">{error}</Typography>\n                </Paper>\n              </Grid>\n            )}\n            \n            {isProcessing && (\n              <Grid item xs={12} style={{ textAlign: 'center', margin: `${theme.spacing(4)}px 0` }}>\n                <CircularProgress />\n                <Typography variant=\"h6\" style={{ marginTop: theme.spacing(2) }}>\n                  Processing image...\n                </Typography>\n              </Grid>\n            )}\n            \n            {results && (\n              <>\n                <Grid item xs={12}>\n                  <ResultDisplay results={results} />\n                </Grid>\n                <Grid item xs={12}>\n                  <LlmAnalysis visionResults={results.data} model={results.model} />\n                </Grid>\n              </>\n            )}\n\n            {/* Vision RAG (LangChain) section at the end */}\n            <Grid item xs={12}>\n              <OpenAIChat imageBase64={imageBase64} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}